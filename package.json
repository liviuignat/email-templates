{
  "name": "maildoodle",
  "description": "Html email templates",
  "author": "Liviu Ignat <liviu@ignat.email> (http://github.com/liviuignat)",
  "license": "MIT",
  "version": "0.0.1",
  "engines": {
    "node": "6.10.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/liviuignat/email-templates"
  },
  "homepage": "http://www.maildoodle.com",
  "keywords": [
    "react",
    "universal",
    "webpack",
    "express",
    "hot reloading",
    "react-hot-reloader",
    "redux"
  ],
  "main": "src/web-server.js",
  "scripts": {
    "start": "concurrent --kill-others \"npm run start-prod\"",
    "start-prod": "node ./node_modules/better-npm-run start-prod",
    "start-local-prod": "node ./node_modules/better-npm-run start-local-prod",
    "start-qa": "node ./node_modules/better-npm-run start-qa",
    "build": "./node_modules/.bin/webpack --verbose --colors --display-error-details --config webpack/prod.config.js",
    "postinstall": "./node_modules/.bin/webpack --display-error-details --config webpack/prod.config.js",
    "lint": "eslint -c .eslintrc ./src",
    "start-dev": "node ./node_modules/better-npm-run start-dev",
    "watch-client": "node ./node_modules/better-npm-run watch-client",
    "dev": "concurrent --kill-others \"npm run watch-client\" \"npm run start-dev\"",
    "test": "jest --runInBand"
  },
  "betterScripts": {
    "start-prod": {
      "command": "node ./src/web-server.js",
      "env": {
        "NODE_PATH": "./src",
        "NODE_ENV": "production"
      }
    },
    "start-local-prod": {
      "command": "node ./src/web-server.js",
      "env": {
        "NODE_PATH": "./src",
        "NODE_ENV": "production",
        "PORT": 8080
      }
    },
    "start-qa": {
      "command": "node ./src/web-server.js",
      "env": {
        "NODE_PATH": "./src",
        "NODE_ENV": "qa",
        "PORT": 8080
      }
    },
    "start-dev": {
      "command": "node ./src/web-server.js",
      "env": {
        "NODE_PATH": "./src",
        "NODE_ENV": "development",
        "PORT": 3000
      }
    },
    "watch-client": {
      "command": "node webpack/webpack-dev-server.js",
      "env": {
        "UV_THREADPOOL_SIZE": 100,
        "NODE_PATH": "./src"
      }
    },
    "test-node": {
      "command": "./node_modules/mocha/bin/mocha ./src/api/**/__tests__/*-test.js --compilers js:babel-core/register --timeout 5000",
      "env": {
        "UV_THREADPOOL_SIZE": 100,
        "NODE_PATH": "./src",
        "NODE_ENV": "integration_tests"
      }
    }
  },
  "dependencies": {
    "autoprefixer-loader": "^3.1.0",
    "babel-core": "^6.22.1",
    "babel-loader": "^6.2.10",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-react-transform": "^2.0.2",
    "babel-plugin-syntax-async-functions": "^6.13.0",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-plugin-transform-flow-strip-types": "^6.22.0",
    "babel-plugin-transform-proto-to-assign": "^6.22.0",
    "babel-plugin-transform-react-display-name": "^6.22.0",
    "babel-plugin-transform-regenerator": "^6.22.0",
    "babel-plugin-transform-runtime": "^6.22.0",
    "babel-polyfill": "^6.22.0",
    "babel-preset-es2015": "^6.22.0",
    "babel-preset-react": "^6.22.0",
    "babel-preset-stage-0": "^6.22.0",
    "body-parser": "^1.14.1",
    "classnames": "^2.2.1",
    "co": "^4.6.0",
    "compression": "^1.6.0",
    "cookie-parser": "^1.4.0",
    "ejs": "^2.3.4",
    "express": "^4.13.3",
    "express-session": "^1.12.1",
    "file-loader": "^0.8.4",
    "history": "^1.13.0",
    "http-proxy": "^1.12.0",
    "immutable": "^3.7.5",
    "less": "^2.5.3",
    "less-loader": "^2.2.1",
    "lodash": "^4.6.1",
    "lru-memoize": "^1.0.0",
    "map-props": "^1.0.0",
    "material-ui": "^0.14.4",
    "md5": "^2.0.0",
    "moment": "^2.10.6",
    "mongoose": "^4.11.1",
    "multireducer": "^1.0.2",
    "nodemailer": "^1.10.0",
    "piping": "^0.3.0",
    "pretty-error": "^1.2.0",
    "mongodb": "^2.0.48",
    "react": "^15.4.2",
    "react-addons-create-fragment": "^15.4.2",
    "react-addons-pure-render-mixin": "^15.4.2",
    "react-addons-transition-group": "^15.4.2",
    "react-addons-update": "^15.4.2",
    "react-codemirror": "^0.2.2",
    "react-dom": "^15.4.2",
    "react-helmet": "^4.0.0",
    "react-hot-loader": "3.0.0-beta.6",
    "react-inline-css": "^2.0.0",
    "react-redux": "^4.0.0",
    "react-router": "^2.0.0",
    "react-router-redux": "^4.0.0",
    "react-tap-event-plugin": "^2.0.1",
    "redux": "^3.0.4",
    "redux-async-connect": "^1.0.0-rc2",
    "redux-form": "^3.0.12",
    "scroll-behavior": "^0.3.2",
    "serialize-javascript": "^1.1.2",
    "serve-favicon": "^2.3.0",
    "serve-static": "^1.10.0",
    "superagent": "^1.4.0",
    "url-loader": "^0.5.6",
    "webpack": "^1.14.0",
    "webpack-dev-middleware": "^1.9.0",
    "webpack-hot-middleware": "^2.15.0",
    "webpack-isomorphic-tools": "^2.6.6"
  },
  "devDependencies": {
    "babel-eslint": "^7.1.1",
    "better-npm-run": "^0.0.4",
    "chai": "^3.3.0",
    "clean-webpack-plugin": "^0.1.3",
    "concurrently": "^0.1.1",
    "css-loader": "^0.20.1",
    "eslint": "^3.14.0",
    "eslint-config-airbnb": "^14.0.0",
    "eslint-loader": "^1.6.1",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-react": "^6.9.0",
    "extract-text-webpack-plugin": "^0.8.2",
    "font-awesome": "^4.4.0",
    "font-awesome-webpack": "0.0.4",
    "jest": "^20.0.4",
    "json-loader": "^0.5.3",
    "node-sass": "^4.3.0",
    "react-a11y": "^0.2.6",
    "react-addons-test-utils": "^0.14.2",
    "react-transform-catch-errors": "^1.0.0",
    "react-transform-hmr": "^1.0.1",
    "redbox-react": "^1.1.1",
    "redux-devtools": "^3.0.0-beta-3",
    "redux-devtools-dock-monitor": "^1.0.0-beta-3",
    "redux-devtools-log-monitor": "^1.0.0-beta-3",
    "redux-router": "1.0.0-beta3",
    "sass-loader": "^4.1.1",
    "strip-loader": "^0.1.0",
    "style-loader": "^0.13.0",
    "supertest": "^1.1.0"
  },
  "jest": {
    "testRegex": "(/__tests__/-*|(\\-|/)(test|spec))\\.jsx?$",
    "modulePaths": [
      "./src"
    ],
    "moduleFileExtensions": [
      "js",
      "jsx"
    ],
    "moduleDirectories": [
      "node_modules",
      "src"
    ],
    "collectCoverageFrom": [
      "src/universal/**/*.js"
    ],
    "coveragePathIgnorePatterns": [
      "node_modules"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 0,
        "functions": 0,
        "lines": 0,
        "statements": 0
      }
    },
    "moduleNameMapper": {}
  }
}
